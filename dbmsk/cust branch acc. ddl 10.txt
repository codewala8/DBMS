/*Create following tables using a given schema and insert appropriate data into the same: 
Customer(CustID, Name, Cust_Address, Phone_no, Email_ID, Age) 
Branch(Branch ID, Branch_Name, Address) 
Account(Account_no, Branch ID, Cust ID, date_open, Account_type, Balance) 
1.Create the tables with referential integrity. 
2.Draw the ER diagram for the same. 
3.Create an Index on primary key column of table Account. 
4.Create the view as Customer_info displaying the customer details for age less than 45. 
5.Update the view with open date as 16/4/2017 
6.Create a sequence on Branch table. 
7.Create synonym ‘Branch_info’ for branch table. */-- Create the database
CREATE DATABASE BankDB;
USE BankDB;

-- Create Customer table
CREATE TABLE Customer (
    CustID INT PRIMARY KEY,
    Name VARCHAR(50),
    Cust_Address VARCHAR(100),
    Phone_no VARCHAR(15),
    Email_ID VARCHAR(50),
    Age INT
);

-- Create Branch table
CREATE TABLE Branch (
    BranchID INT PRIMARY KEY,
    Branch_Name VARCHAR(50),
    Address VARCHAR(100)
);

-- Create Account table with foreign keys
CREATE TABLE Account (
    Account_no INT PRIMARY KEY,
    BranchID INT,
    CustID INT,
    date_open DATE,
    Account_type VARCHAR(20),
    Balance DECIMAL(15, 2),
    FOREIGN KEY (BranchID) REFERENCES Branch(BranchID),
    FOREIGN KEY (CustID) REFERENCES Customer(CustID)
);

-- Insert data into Customer table
INSERT INTO Customer (CustID, Name, Cust_Address, Phone_no, Email_ID, Age) VALUES
(1, 'Arjun Sharma', 'Pune', '9876543210', 'arjun@example.com', 28),
(2, 'Neha Verma', 'Mumbai', '8765432109', 'neha@example.com', 32),
(3, 'Amit Desai', 'Delhi', '7654321098', 'amit@example.com', 25),
(4, 'Kiran Rao', 'Delhi', '6543210987', 'kiran@example.com', 40),
(5, 'Anjali Patel', 'Pune', '5432109876', 'anjali@example.com', 36);

-- Insert data into Branch table
INSERT INTO Branch (BranchID, Branch_Name, Address) VALUES
(1, 'Pune Main Branch', 'Pune'),
(2, 'Mumbai Central Branch', 'Mumbai'),
(3, 'Delhi North Branch', 'Delhi');

-- Insert data into Account table
INSERT INTO Account (Account_no, BranchID, CustID, date_open, Account_type, Balance) VALUES
(1001, 1, 1, '2018-08-16', 'Saving Account', 55000.00),
(1002, 2, 2, '2018-02-16', 'Loan Account', 40000.00),
(1003, 1, 3, '2020-09-20', 'Saving Account', 70000.00),
(1004, 3, 4, '2019-11-25', 'Fixed Deposit', 80000.00),
(1005, 1, 5, '2023-02-05', 'Saving Account', 15000.00);

-- Create an Index on the primary key column of table Account
CREATE INDEX idx_Account_no ON Account (Account_no);

-- Create a view as Customer_info displaying the customer details for age less than 45
CREATE VIEW Customer_info AS
SELECT * FROM Customer
WHERE Age < 45;

-- Update the open date for all accounts of customers displayed by the view
UPDATE Account
SET date_open = '2017-04-16'
WHERE CustID IN (SELECT CustID FROM Customer_info);

-- Create a sequence-like table for Branch (simulating a sequence)
CREATE TABLE Branch_Sequence (NextVal INT NOT NULL);
INSERT INTO Branch_Sequence (NextVal) VALUES (4);  -- Assuming the next value starts from 4

-- Function to get next sequence value (if needed)
DELIMITER //
CREATE FUNCTION Get_Next_Branch_Sequence() RETURNS INT
BEGIN
    UPDATE Branch_Sequence SET NextVal = NextVal + 1;
    RETURN (SELECT NextVal FROM Branch_Sequence);
END //
DELIMITER ;

-- Create a view as Branch_info for the Branch table
CREATE VIEW Branch_info AS
SELECT * FROM Branch;

-- Show all data from the created tables and views
SELECT * FROM Customer;
SELECT * FROM Branch;
SELECT * FROM Account;
SELECT * FROM Customer_info;
SELECT * FROM Branch_info;
